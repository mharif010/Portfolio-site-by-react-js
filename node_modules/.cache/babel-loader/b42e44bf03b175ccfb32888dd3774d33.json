{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\mharifpro\\\\src\\\\components\\\\Player.js\";\nimport React from 'react';\nimport PlayerAPI from '../api';\nimport { Link } from 'react-router-dom'; // The Player looks up the player using the number parsed from\n// the URL's pathname. If no player is found with the given\n// number, then a \"player not found\" message is displayed.\n\nconst Player = props => {\n  const player = PlayerAPI.get(parseInt(props.match.params.number, 10));\n\n  if (!player) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 12\n      }\n    }, \"Sorry, but the player was not found\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, player.name, \" (#\", player.number, \")\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Position: \", player.position), /*#__PURE__*/React.createElement(Link, {\n    to: \"/roster\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Back\"));\n};\n\nexport default Player;","map":{"version":3,"sources":["E:/react/mharifpro/src/components/Player.js"],"names":["React","PlayerAPI","Link","Player","props","player","get","parseInt","match","params","number","name","position"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,QAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;AACA;AACA;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAMC,MAAM,GAAGJ,SAAS,CAACK,GAAV,CACbC,QAAQ,CAACH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,MAApB,EAA4B,EAA5B,CADK,CAAf;;AAGA,MAAI,CAACL,MAAL,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAP;AACD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,MAAM,CAACM,IAAZ,SAAqBN,MAAM,CAACK,MAA5B,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeL,MAAM,CAACO,QAAtB,CAFF,eAGE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CADF;AAOD,CAdD;;AAgBA,eAAeT,MAAf","sourcesContent":["import React from 'react'\r\nimport PlayerAPI from '../api'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// The Player looks up the player using the number parsed from\r\n// the URL's pathname. If no player is found with the given\r\n// number, then a \"player not found\" message is displayed.\r\nconst Player = (props) => {\r\n  const player = PlayerAPI.get(\r\n    parseInt(props.match.params.number, 10)\r\n  )\r\n  if (!player) {\r\n    return <div>Sorry, but the player was not found</div>\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>{player.name} (#{player.number})</h1>\r\n      <h2>Position: {player.position}</h2>\r\n      <Link to='/roster'>Back</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Player\r\n"]},"metadata":{},"sourceType":"module"}